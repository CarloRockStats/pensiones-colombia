library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
pensionados_2020_03_headers <- readxl::read_xls(path = link_afpo2020,
range = "Pensionados!A38:AS46",
n_max = 3,
col_names = FALSE)
link_afpo2020 <- "https://www.superfinanciera.gov.co/descargas/institucional/pubFile1044614/afpo2020.xls"
pensionados_2020_03_headers <- readxl::read_xls(path = link_afpo2020,
range = "Pensionados!A38:AS46",
n_max = 3,
col_names = FALSE)
pensionados_2020_03_headers <- readxl::read_xls(path = "link_afpo2020.xls",
range = "Pensionados!A38:AS46",
n_max = 3,
col_names = FALSE)
pensionados_2020_03_headers <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados!A38:AS46",
n_max = 3,
col_names = FALSE)
pensionados_2020_03_headers <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados!A38:AS46",
n_max = 3,
col_names = FALSE)
pensionados_2020_03_headers <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados !A38:AS46",
n_max = 3,
col_names = FALSE)
View(pensionados_2020_03_headers)
pensionados_2020_03_headers <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados !A38:AS40",
n_max = 3,
col_names = FALSE)
View(pensionados_2020_03_headers)
fillHeaders <- function(header_table) {
for (row in 2:nrow(header_table)) {
this_row <- header_table[row, ]
last_row <- header_table[row-1, ]
new_row <- ifelse(is.na(this_row), last_row, this_row)
header_table[row, ] <- new_row
}
header_table
}
new_names <- pensionados_2020_03_headers %>%
t() %>% # transposes the data and turns it into a matrix
as_tibble() %>% # turn it back as a tibble
fillHeaders() %>%
mutate(name = paste(V1, V2, V3, sep = "_")) %>%
pull(name)
View(new_names)
function_test_fill <- pensionados_2020_03_headers %>%
t() %>% # transposes the data and turns it into a matrix
as_tibble() %>% # turn it back as a tibble
fillHeaders()
View(function_test_fill)
is.na(pensionados_2020_03_headers[1, ])
View((pensionados_2020_03_headers))
View(t(pensionados_2020_03_headers))
pensionados_2020_03_data <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados !A42:AS46",
col_names = new_names)
View(pensionados_2020_03_data)
(.packages())
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = new_names, names_to = "var", values_to = "val")
library(tidyr)
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = new_names, names_to = "var", values_to = "val")
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("backports", "BH", "broom", "clipr", "DBI", "dbplyr", "dplyr", "ellipsis", "fansi", "forcats", "ggplot2", "git2r", "glue", "googledrive", "googlesheets4", "gtools", "haven", "hms", "htmltools", "knitr", "lubridate", "markdown", "modelr", "pdftools", "pillar", "pkgbuild", "pkgconfig", "pkgload", "plyr", "prettyunits", "ps", "Rcpp", "reshape2", "rmarkdown", "rversions", "rvest", "scales", "selectr", "srvyr", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "xml2", "yaml", "zoo"))
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
pensionados_2020_03_headers <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados !A38:AS40",
n_max = 3,
col_names = FALSE)
View(t(pensionados_2020_03_headers))
fillHeaders <- function(header_table) {
for (row in 2:nrow(header_table)) {
this_row <- header_table[row, ]
last_row <- header_table[row-1, ]
new_row <- ifelse(is.na(this_row), last_row, this_row)
header_table[row, ] <- new_row
}
header_table
}
function_test_fill <- pensionados_2020_03_headers %>%
t() %>% # transposes the data and turns it into a matrix
as_tibble() %>% # turn it back as a tibble
fillHeaders()
View(function_test_fill)
new_names <- pensionados_2020_03_headers %>%
t() %>% # transposes the data and turns it into a matrix
as_tibble() %>% # turn it back as a tibble
fillHeaders() %>%
mutate(name = paste(V1, V2, V3, sep = "_")) %>%
pull(name)
View(new_names)
pensionados_2020_03_data <- readxl::read_xls(path = "afpo2020.xls",
range = "Pensionados !A42:AS46",
col_names = new_names)
View(pensionados_2020_03_data)
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = new_names, names_to = "var", values_to = "val")
View(new_names)
View(pensionados_2020_03_data)
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = 2:ncol(), names_to = "var", values_to = "val")
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = 2:45, names_to = "var", values_to = "val")
View(pensionados_2020_03_data_long)
pensionados_2020_03_data_long <- pensionados_2020_03_data %>%
# add row IDs if each row doesn't already have uniquely identifying column(s)
mutate(identificador = row_number()) %>%
# pivot longer "lengthens" data, increasing the number of rows and decreasing the number of columns.
# The inverse transformation is pivot_wider()
pivot_longer(cols = 2:45, names_to = "var", values_to = "val") %>%
# split the variable names into their three component parts
separate(var, c("tipo_pension", "modo_pension", "sexo"), sep = "_")
View(pensionados_2020_03_data_long)
pensionados_2020_03_data_long %>% group_by(modo_pension) %>%
summarise(cantidad = n())
pensionados_2020_03_data_long %>% group_by(modo_pension) %>%
summarise(cantidad_pensionados = sum())
pensionados_2020_03_data_long %>% group_by(modo_pension) %>%
summarise(cantidad_pensionados = sum(val))
pensionados_2020_03_data_long %>% summarise(cant_total = sum(val))
cant_pensionados_rais_modo <- pensionados_2020_03_data_long %>% group_by(modo_pension) %>%
summarise(cantidad_pensionados = sum(val))
cant_pensionados_rais_modo
write_csv2(cant_pensionados_rais_modo, "cant_pensionados_rais_modo.csv")
cant_pensionados_rais_modo_sexo <- pensionados_2020_03_data_long %>%
group_by(modo_pension, sexo) %>%
summarise(cantidad_pensionados = sum(val))
cant_pensionados_rais_modo_sexo
write_csv2(cant_pensionados_rais_modo_sexo, "cant_pensionados_rais_modo_sexo.csv")
